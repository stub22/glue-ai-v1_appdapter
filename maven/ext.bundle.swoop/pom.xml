
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.appdapter</groupId>
		<artifactId>org.appdapter.modules.all</artifactId>
		<version>1.1.1-SNAPSHOT</version>
		<relativePath>../org.appdapter.modules.all/pom.xml</relativePath>
	</parent>

	<artifactId>ext.bundle.swoop</artifactId>
	<packaging>bundle</packaging>
	<name>ext.bundle.swoop - OSGi - swoop wrapper</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<swoop.groupId>org.appdapter</swoop.groupId>
		<swoop.artifactId>ext.bundle.swoop</swoop.artifactId>
		<swoop.version>1.1.1-SNAPSHOT</swoop.version>
	</properties>
	<repositories>
		<!-- 		
        <repository>
            <id>maven2-repository.dev.java.net</id>
            <name>Java.net Repository for Maven</name>
            <url>http://download.java.net/maven/2/</url>
        </repository>		

		May be used again for swoop, but org.semanticweb is now in Sonatype
		<repository>
		
			<id>maven.java.net-SNAP</id>
			<name>maven.java.net SNAPSHOTS Repo</name>
			<url>https://maven.java.net/content/repositories/snapshots/</url>
		</repository>
	-->
	</repositories>	
	<dependencies>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.osgi.core</artifactId>
			<version>1.4.0</version>
		</dependency>
     <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.5</version>
            <scope>runtime</scope>
            <exclusions>
                <!-- We exclude the normally embedded Log4J version, because it is not OSGi friendly.
                        We instead use the bundled version supplied by SpringSource below.
                -->				
                <exclusion>
                    <artifactId>log4j</artifactId>
                    <groupId>log4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
		<!--  snapshots have disappeared, so using uploaded libs and
			a direct dep on org.semanticweb. It is an OSGi bundle, but cannot
			be cleanly shared via maven 
			not need re-wrapping.
		
		<dependency>
			<groupId>org.swoop</groupId>
			<artifactId>swoop</artifactId>
			<version>5.0-SNAPSHOT</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>
		-->
		<!--    On our *first* build, this dep is installed to local repo during initialize phase below. 
			

                        Currently, to make that work, you must 
                        1) Manually disable (comment out) this dependency the dep
                        2) run "mvn initialize" (or "build" from netbeans), 
                        3) Re-enable (uncomment) the dependency.
                        4) Run "mvn clean install" (or Netbeans "clean and build")
                        
		
	  	--> 
                <!-- IMPORTANT and UGLY: Comment out this dep on first build (against
                your particular local maven_repo), then uncomment and rebuild -->
		<!-- dependency>
			<groupId>org.swoop</groupId>
			<artifactId>swoop-mathematics</artifactId>
			<version>5.0-SNAPSHOT</version>
			<scope>provided</scope>
		</dependency-->
		<!--  this swoop exists?  -->
		<!--dependency>
			<groupId>org.swoop</groupId>
			<artifactId>swoop</artifactId>
			<version>4.3.1</version>
		</dependency-
       	<dependency>
            <groupId>org.semanticweb</groupId>
			<artifactId>org.semanticweb</artifactId>
		   We tearfully have to re-export org.semanticweb, even though it's  supplied to us as a "bundle", 
				because the embedded poms are entangled with the broken java.net repository, and 
				it is all just too screwed up.
			
			<type>jar</type>
			<version>5.5.1</version>
			<scope>provided</scope>
		</dependency-->
       	<dependency>
       		<groupId>org.appdapter</groupId>
       		<artifactId>ext.bundle.jena_all_2_10_1</artifactId>
       		<version>1.1.1-SNAPSHOT</version>
       		<type>bundle</type>
       		<scope>provided</scope>
       	</dependency>
       	<dependency>
       		<groupId>org.appdapter</groupId>
       		<artifactId>org.appdapter.lib.core</artifactId>
       		<version>1.1.1-SNAPSHOT</version>
       	</dependency>
	</dependencies>

      <build>

            <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
            <resource>
        <directory>images</directory>
      </resource>
      <resource>
        <directory>.</directory>
        <includes>
          <include>plugin.xml</include>
        </includes>
      </resource>
    </resources>

    <plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.3.1</version>
				<executions>
					<execution>
						<id>install-swoop-snap-jar</id>
						<phase>verify</phase>
						<goals>
							<goal>install-file</goal>	
						</goals>
						<!--
						<goals>
							<goal>install-jar-manually-goal-by-stub22</goal>
						</goals>
						-->
						<configuration>
							<packaging>jar</packaging>
							<groupId>${swoop.groupId}</groupId>
							<artifactId>${swoop.artifactId}</artifactId>
							<version>${swoop.version}</version>
							<file>${project.build.directory}/${project.build.finalName}.jar</file>
						</configuration>
					</execution>
				</executions>
			</plugin>				
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.3.7</version>
				<extensions>true</extensions>
				<configuration>
					<instructions>
                        <Bundle-Activator>org.appdapter.ext.bundle.swoop.SwoopActivator</Bundle-Activator>
						<!-- (re-)export both swoop and org.semanticweb, plus any extra activator classes -->
						<Export-Package>org.mindswap.swoop.*, org.mindswap.*, *, org.semanticweb.*, org.appdapter.* </Export-Package>
                        <Import-Package>*;resolution:=optional</Import-Package>
                        <Private-Package>javax.xml.stream.util.*, javax.xml.bind.*</Private-Package>
                        <Main-Class>org.mindswap.swoop.Swoop</Main-Class>
                        <Bundle-ClassPath>.,{maven-dependencies},WEB-INF/classes</Bundle-ClassPath>
                        <Class-Path>.,{maven-dependencies},WEB-INF/classes</Class-Path>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-install-plugin
										</artifactId>
										<versionRange>
											[2.3.1,)
										</versionRange>
										<goals>
											<goal>install-file</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>build-for-felix</id>
			<dependencies>
				<dependency>
					<groupId>org.apache.felix</groupId>
					<artifactId>org.apache.felix.main</artifactId>
					<version>4.2.1</version>
					<scope>provided</scope>
				</dependency>
                <!-- To include a shell:
                <dependency>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.gogo.shell</artifactId>
                    <version>0.6.1</version>
                </dependency>
                -->
			</dependencies>
			<build>
				<plugins>
				
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.6</version>
						<executions>
          <execution>
            <phase>process-sources</phase>
            <configuration>
                <target name="bundlesnap"></target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>

							<execution>
								<id>compile</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<pathconvert property="plugins.jars" pathsep="${path.separator}">
											<path refid="maven.runtime.classpath" />
											<map from="${project.build.directory}${file.separator}classes" to="" />
										</pathconvert>
										<pathconvert pathsep=" " property="bundles">
											<path path="${plugins.jars}" />
											<mapper>
												<chainedmapper>
													<flattenmapper />
													<globmapper from="*" to="file:modules/*" casesensitive="no" />
												</chainedmapper>
											</mapper>
										</pathconvert>
										<propertyfile file="${project.build.directory}/config.properties">
											<entry key="felix.auto.start" value="${bundles} file:modules/${project.build.finalName}.jar" />
											<entry key="org.osgi.framework.bootdelegation" value="*" />
										</propertyfile>
										<copy file="${maven.dependency.org.apache.felix.org.apache.felix.main.jar.path}" tofile="${project.build.directory}/felix.jar" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.2</version>
						<executions>
							<execution>
								<id>create-executable-jar</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${basedir}/src/main/assembly/felix.xml</descriptor>
									</descriptors>
									<finalName>${project.build.finalName}</finalName>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
             <profile>
            <id>run-on-felix</id>
            <dependencies>
                <dependency>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.main</artifactId>
                    <version>4.2.1</version>
                    <scope>provided</scope>
                </dependency>
                <!-- org.apache.felix:org.apache.felix.gogo.shell:0.6.1 useless from Maven since stdin is swallowed -->
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.6</version>
                        <configuration>
                            <target>
                                <property name="vm.args" value="" />
                                <pathconvert property="plugins.jars" pathsep="${path.separator}">
                                    <path refid="maven.runtime.classpath" />
                                    <map from="${project.build.directory}${file.separator}classes" to="" />
                                </pathconvert>
                                <makeurl property="urls" separator=" ">
                                    <path path="${plugins.jars}" />
                                    <path location="${project.build.directory}/${project.build.finalName}.jar" />
                                </makeurl>
                                <propertyfile file="${project.build.directory}/run.properties">
                                    <entry key="felix.auto.start" value="${urls}" />
                                    <entry key="felix.auto.deploy.action" value="uninstall,install,update,start" />
                                    <entry key="org.osgi.framework.storage" value="${project.build.directory}${file.separator}felix-cache" />
                                    <entry key="org.osgi.framework.bootdelegation" value="*" />
                                    <!-- HRK Customization:   Allow sun.misc package to be used under OSGi -->
                                    <!-- org.w3c.dom.* are missing from default.properties in felix 4.2.1, they are present in 3.0.7 -->
									<entry key="org.osgi.framework.system.packages.extra" 
                                           value="sun.misc,
                                                    org.w3c.dom.css,
                                                    org.w3c.dom.html,
                                                    org.w3c.dom.stylesheets,
                                                    org.w3c.dom.traversal,
                                                    org.w3c.dom.ranges,
                                                    org.w3c.dom.views,
                                                    org.w3c.dom.xpath" />	
                                </propertyfile>
                                <makeurl property="run.properties.url" file="${project.build.directory}/run.properties" />
                                <java fork="true" jar="${maven.dependency.org.apache.felix.org.apache.felix.main.jar.path}">
                                    <sysproperty key="felix.config.properties" value="${run.properties.url}" />
                                    <sysproperty key="com.hrkind.robot.connections" value="${com.hrkind.robot.connections}" />
                                    <sysproperty key="com.hrkind.demo.behavior.master.source" value="${com.hrkind.demo.behavior.master.source}" />
                                    <jvmarg line="${vm.args}" />
                                </java>
                            </target>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>	  
	</profiles>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>apache-jena-libs</artifactId>
				<version>2.10.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>jena-tdb</artifactId>
				<version>0.10.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>jena-arq</artifactId>
				<version>2.10.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>jena-core</artifactId>
				<version>2.10.1</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
</project>
<!--
/*
 *  Copyright 2011 by The Appdapter Project (www.appdapter.org).
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
-->

