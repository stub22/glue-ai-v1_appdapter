#Root logger
log4j.rootLogger=ALL, stdout, R

# OFF
# FATAL
# ERROR
# WARN
# INFO
# DEBUG
# TRACE
# ALL

# http://logging.apache.org/log4j/1.2/manual.html

# If a given logger is not assigned a level, then it inherits one from its closest ancestor with an assigned level
# The output of a log statement of logger C will go to all the appenders in C and its ancestors. 
# This is the meaning of the term "appender additivity".
# However, if an ancestor of logger C, say P, has the additivity flag set to false, then C's output will be directed 
# to all the appenders in C and its ancestors upto and including P but not the appenders in any of the ancestors of P.
# Loggers have their additivity flag set to true by default.

# http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/PatternLayout.html

log4j.logger.com.hrkind=ALL

# Base of all Appdapter classes
log4j.logger.org.appdapter=WARN

log4j.logger.org.cogchar=INFO
log4j.logger.org.cogchar.nbui.render.Installer=INFO

# Base of all Jena classes
log4j.logger.com.hp.hpl.jena=ALL

# Some improvements in this component's logging are coming in next robokind.org version (0.9.0),
# then we can bring it back to level WARN or INFO here.
log4j.logger.org.jflux.impl.services.rk.osgi.lifecycle.OSGiComponent=ERROR


# Example of switching on debug level logging for part of tree
# log4j.logger.com.hp.hpl.jena.graph.test=debug
# log4j.logger.com.hp.hpl.jena.reasoner=debug
# log4j.logger.com.hp.hpl.jena.reasoner.test=debug

# Log format to standard out
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
# Includes timestamp, priority, thread, caller's file name, line number, method name
#  File+line is expensive; is it properly shortcut by priority filtering? 
log4j.appender.stdout.layout.ConversionPattern=%-6r %5p [%t] (%F:%L) %M - %m%n

# Log format to standard error
log4j.appender.stderr=org.apache.log4j.ConsoleAppender
log4j.appender.stderr.target=System.err
log4j.appender.stderr.layout=org.apache.log4j.PatternLayout
# Pattern to output the caller's file name and line number.
log4j.appender.stderr.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n

# File based log output
log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.R.File=hrk_demo_behav_mast.log
log4j.appender.R.MaxFileSize=5000KB
# Keep one backup file
log4j.appender.R.MaxBackupIndex=1
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=%p %t %c - %m%n



#log4j.logger.org.robokind.impl.motion.dynamixel.DynamixelMover=TRACE, DYNA
#log4j.additivity.org.robokind.impl.motion.dynamixel.DynamixelMover=false
#log4j.appender.DYNA=org.apache.log4j.RollingFileAppender
#log4j.appender.DYNA.File=dyna_data.log
#log4j.appender.DYNA.MaxFileSize=5000KB
#log4j.appender.DYNA.MaxBackupIndex=1
#log4j.appender.DYNA.layout=org.apache.log4j.PatternLayout
#log4j.appender.DYNA.layout.ConversionPattern=%m%n
