
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.appdapter.osgi</groupId>
	<artifactId>Appdapter_OSGi</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>bundle</packaging>

	<name>Appdapter_OSGi_Heavy</name>

	<description>OSGi "heavy" bundle, with many dependencies included as private packages.</description>
	<inceptionYear>2011</inceptionYear>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.appdapter.org/license.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<repositories>
		<repository>
			<id>org.apache.repository-SNAPSHOTS</id>
			<name>Apache snapshots</name>
			<url>http://repository.apache.org/snapshots/</url>
			<layout>default</layout>
		</repository>

		<repository>
			<id>com.springsource.repository.bundles.external</id>
			<name>Spring EBR External Release Repository</name>
			<url>http://repository.springsource.com/maven/bundles/external</url>
		</repository>
		
	</repositories>
	<dependencies>
		<dependency>
			<groupId>org.apache.clerezza.ext</groupId>
			<artifactId>com.hp.hpl.jena</artifactId>
			<version>0.6-incubating-SNAPSHOT</version>
		    <exclusions>
		        <exclusion>
		            <artifactId>scala-library</artifactId>
		            <groupId>org.scala-lang</groupId>
		        </exclusion>
		        <exclusion>
		            <artifactId>lucene-core</artifactId>
		            <groupId>org.apache.lucene</groupId>
		        </exclusion>
		        <exclusion>
		            <artifactId>xml-apis</artifactId>
		            <groupId>xml-apis</groupId>
		        </exclusion>
		        <exclusion>
		            <artifactId>xercesImpl</artifactId>
		            <groupId>xerces</groupId>
		        </exclusion>
		        <exclusion>
		            <artifactId>wstx-asl</artifactId>
		            <groupId>org.codehaus.woodstox</groupId>
		        </exclusion>
		        <exclusion>
		            <artifactId>log4j</artifactId>
		            <groupId>log4j</groupId>
		        </exclusion>
		        <exclusion>
		            <artifactId>icu4j</artifactId>
		            <groupId>com.ibm.icu</groupId>
		        </exclusion>
		    </exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.clerezza.ext</groupId>
			<artifactId>javax.mail</artifactId>
			<version>0.4-incubating-SNAPSHOT</version>
		</dependency>
		<!-- Wrapper for full Lucene 
		<dependency>
			<groupId>org.apache.clerezza.ext</groupId>
			<artifactId>org.apache.lucene</artifactId>
			<version>0.1-incubating-SNAPSHOT</version>
		</dependency>		
		-->
	 <dependency>
	  <groupId>org.apache.felix</groupId>
	  <artifactId>org.apache.felix.shell.remote</artifactId>
	  <version>1.1.2</version>
	  <exclusions>
	   <exclusion>
	    <artifactId>org.osgi.core</artifactId>
	    <groupId>org.apache.felix</groupId>
	   </exclusion>
	  </exclusions>
	 </dependency>
	 <dependency>
	  <groupId>org.apache.felix</groupId>
	  <artifactId>org.apache.felix.gogo.command</artifactId>
	  <version>0.10.0</version>
	 </dependency>
	 <dependency>
	  <groupId>org.apache.felix</groupId>
	  <artifactId>org.apache.felix.gogo.shell</artifactId>
	  <version>0.10.0</version>
	 </dependency>
	 <dependency>
	  <artifactId>org.osgi.core</artifactId>
	  <groupId>org.osgi</groupId>
	  <type>jar</type>
	  <version>4.2.0</version>
	 </dependency>
	 <dependency>
	  <artifactId>org.apache.felix.gogo.runtime</artifactId>
	  <groupId>org.apache.felix</groupId>
	  <type>jar</type>
	  <version>0.10.0</version>
	 </dependency>
	 <dependency>
	  <groupId>org.appdapter</groupId>
	  <artifactId>Appdapter_ScalaAndJava</artifactId>
	  <version>1.0-SNAPSHOT</version>
	 </dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.2.0</version>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-Activator>org.appdapter.osgi.bundle.AppdapterBundleActivator</Bundle-Activator>
						<Export-Package>org.appdapter.*</Export-Package>
						<!-- Jena wants lucene, which wants sun.misc -->
						<Private-Package>arq.*,sdb.*,com.hp.hpl.jena.sdb.*</Private-Package>			
					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>build-for-felix</id>
			<dependencies>
				<dependency>
					<groupId>org.apache.felix</groupId>
					<artifactId>org.apache.felix.main</artifactId>
					<version>3.0.7</version>
					<scope>provided</scope>
				</dependency>
                <!-- To include a shell:
                <dependency>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.gogo.shell</artifactId>
                    <version>0.6.1</version>
                </dependency>
                -->
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>compile</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<pathconvert property="plugins.jars" pathsep="${path.separator}">
											<path refid="maven.runtime.classpath"/>
											<map from="${project.build.directory}${file.separator}classes" to=""/>
										</pathconvert>
										<pathconvert pathsep=" " property="bundles">
											<path path="${plugins.jars}"/>
											<mapper>
												<chainedmapper>
													<flattenmapper/>
													<globmapper from="*" to="file:modules/*" casesensitive="no"/>
												</chainedmapper>
											</mapper>
										</pathconvert>
										<propertyfile file="${project.build.directory}/config.properties">
											<entry key="felix.auto.start" value="${bundles} file:modules/${project.build.finalName}.jar"/>
											<entry key="org.osgi.framework.bootdelegation" value="*"/>
											<!-- Added by stu as part of remote shell/gogo config -->
											<entry key="osgi.framework.activeThreadType" value="normal"/>
										</propertyfile>
										<copy file="${maven.dependency.org.apache.felix.org.apache.felix.main.jar.path}" tofile="${project.build.directory}/felix.jar"/>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.2</version>
						<executions>
							<execution>
								<id>create-executable-jar</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${basedir}/src/main/assembly/felix.xml</descriptor>
									</descriptors>
									<finalName>${project.build.finalName}</finalName>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>run-on-felix</id>
			<dependencies>
				<dependency>
					<groupId>org.apache.felix</groupId>
					<artifactId>org.apache.felix.main</artifactId>
					<version>3.0.7</version>
					<scope>provided</scope>
				</dependency>
                <!-- org.apache.felix:org.apache.felix.gogo.shell:0.6.1 useless from Maven since stdin is swallowed -->
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.6</version>
						<configuration>
							<target>
								<property name="vm.args" value=""/>
								<pathconvert property="plugins.jars" pathsep="${path.separator}">
									<path refid="maven.runtime.classpath"/>
									<map from="${project.build.directory}${file.separator}classes" to=""/>
								</pathconvert>
								<makeurl property="urls" separator=" ">
									<path path="${plugins.jars}"/>
									<path location="${project.build.directory}/${project.build.finalName}.jar"/>
								</makeurl>
								<propertyfile file="${project.build.directory}/run.properties">
									<entry key="felix.auto.start" value="${urls}"/>
									<entry key="felix.auto.deploy.action" value="uninstall,install,update,start"/>
									<entry key="org.osgi.framework.storage" value="${project.build.directory}${file.separator}felix-cache"/>
									<entry key="org.osgi.framework.bootdelegation" value="*"/>
											<!-- Added by stu as part of remote shell/gogo config -->
											<entry key="osgi.framework.activeThreadType" value="normal"/>									
								</propertyfile>
								<makeurl property="run.properties.url" file="${project.build.directory}/run.properties"/>

								<!--
										This is the execution form supplied by maven-OSGi archetype.
										But it does not allow console interaction with Felix shell.
										
                                <java fork="true" jar="${maven.dependency.org.apache.felix.org.apache.felix.main.jar.path}">
                                    <sysproperty key="felix.config.properties" value="${run.properties.url}"/>
                                    <jvmarg line="${vm.args}"/>
                                </java>
								
										So, we (appdapter) add the ability to run ant with same properties
										outside of Maven.   Maven run also works (with no console input
										to stdin).  
										
										TODO:  Find a way to pass stdin stream of maven into ant (or directly into Felix).
									
								-->
								<property name="felix.ant.run.props" value="${project.build.directory}/felix.ant.run.props"/>
								<echo>[m-a] felix.ant.run.props=${felix.ant.run.props}</echo>
								
								<!-- Write/update runtime properties out for external use (in future ant run). -->
								<propertyfile file="${felix.ant.run.props}">
									<entry key="felix.main.jar.path" value="${maven.dependency.org.apache.felix.org.apache.felix.main.jar.path}"/>
									<entry key="felix.config.props.url" value="${run.properties.url}"/>
									<entry key="felix.jvm.args" value="${vm.args}"/>
								</propertyfile>
								<!-- Load those same props into current context -->
								<property file="${felix.ant.run.props}"/>
								
								<echo>[m-a] felix.main.jar.path=</echo> 
								<echo>[m-a] felix.config.props.url=${felix.config.props.url}</echo> 	
								<echo>[m-a] felix.jvm.args=${felix.jvm.args}</echo>
								
								<ant antfile="${basedir}/ant_run.xml">
									<target name="java-fork-felix-jar"/>
								</ant>								
							</target>
							
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
