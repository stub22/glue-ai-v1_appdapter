<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.appdapter</groupId>
		<artifactId>org.appdapter.modules.core</artifactId>
		<version>1.1.3-SNAPSHOT</version>
		<relativePath>../org.appdapter.modules.core/pom.xml</relativePath>
	</parent>

	<artifactId>ext.bundle.openconverters</artifactId>
	<packaging>bundle</packaging>
	<name>${project.artifactId} - OSGi - Open Converters Bundler</name>
    <description>${project.artifactId} - OSGi - Open Converters Bundler</description>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ext.bundle.osgi.common</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.core</artifactId>
			<version>4.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.compendium</artifactId>
			<version>4.2.0</version>
		</dependency>
		<dependency>
			<artifactId>slf4j-api</artifactId>
			<groupId>org.slf4j</groupId>
			<type>jar</type>
			<version>1.7.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ext.bundle.xml.dom4j_161</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.9</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>ooxml-schemas</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml-schemas</artifactId>
			<version>3.9</version>
		</dependency>
		<!-- TODO: Let's move the POI-dependent features into their own bundle
			oriented towards data import/export. Included ow2 bundle to export apache.commons.logging.
			Needed by org.apache.poi -->
		<dependency>
			<groupId>org.ow2.bundles</groupId>
			<artifactId>ow2-bundles-externals-commons-logging</artifactId>
			<version>1.0.33</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging-api</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- for the GUI -->
		<!--dependency> <groupId>com.jidesoft</groupId> <artifactId>jide-oss</artifactId>
			<version>3.5.5</version> </dependency -->

		<!-- Included servicemix bundle to export apache.commons.codec. Needed
			by org.apache.poi ... but this sorta conflicts with direct commons-codec
			dep required by Jena ARQ, which uses a different version numbering stream,
			numerically *higher* than this one, so let's try taking this one out. -->
		<!-- <dependency> <groupId>org.apache.servicemix.bundles</groupId> <artifactId>org.apache.servicemix.bundles.commons-codec</artifactId>
			<version>1.3_3</version> <scope>runtime</scope> </dependency> -->
		<dependency>
			<groupId>org.openl.rules</groupId>
			<artifactId>org.openl.lib.poi.dev</artifactId>
			<version>5.9.4.1</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<artifactId>xmlbeans</artifactId>
					<groupId>org.apache.xmlbeans</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- excluded.. now we add our own -->
		<dependency>
			<groupId>org.apache.xmlbeans</groupId>
			<artifactId>xmlbeans</artifactId>
			<version>2.5.0</version>
		</dependency>


		<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>2.3</version>
		</dependency>
		<dependency>
			<!-- Needed at compile time so we can provide a utility to force the properties
				resource URL in, due to TCCL issues with Log4J's default startup in OSGi
				environment. -->

			<groupId>org.apache.log4j</groupId>
			<artifactId>com.springsource.org.apache.log4j</artifactId>
			<version>1.2.16</version>
			<scope>provided</scope>
		</dependency>


		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.5</version>
		</dependency>


		<!-- Problems in Felix, because A) System Bundle #0 supplies the JAXP APIs
			at version 0.0., B) Dom4J specifies broad "uses" constraints on its exports.
			C) Dom4J specifies version number >1.0 on SOME of its imports. [java] javax.xml.parsers;
			version=0.0.0.1_006_JavaSE imported by: [java] org.apache.servicemix.bundles.dom4j
			[255] [java] org.apache.servicemix.bundles.xpp3 [283] [java] org.apache.servicemix.bundles.xmlresolver
			[342] [java] org.apache.servicemix.bundles.xerces [256] [java] com.springsource.org.apache.log4j
			[273] [java] scala-library [249] <dependency> <groupId>org.apache.servicemix.bundles</groupId>
			<artifactId>org.apache.servicemix.bundles.dom4j</artifactId> <version>1.6.1_4</version>
			<exclusions> <exclusion> <artifactId>xml-apis</artifactId> <groupId>xml-apis</groupId>
			</exclusion> </exclusions> </dependency> -->
		<!-- *************** Runtime Deps *********************** -->


		<!-- <dependency> <groupId>org.apache.servicemix.specs</groupId> <artifactId>org.apache.servicemix.specs.jaxp-api-1.4</artifactId>
			<version>1.6.0</version> <scope>runtime</scope> </dependency> -->



		<!-- ************************** Test Deps *********************** -->

		<dependency>
			<groupId>org.apache.servicemix.bundles</groupId>
			<artifactId>org.apache.servicemix.bundles.junit</artifactId>
			<version>4.7_3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.9</version>
			<exclusions>
				<exclusion>
					<groupId>dom4j</groupId>
					<artifactId>dom4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- SLF4J Test Bindings. We can change the scope during unit testing,
			but don't commit to SVN with scope other than "test" -->
		<!-- <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-simple</artifactId>
			<version>1.6.2</version> <scope>test</scope> </dependency> -->

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.3.7</version>
				<extensions>true</extensions>
				<configuration>
                    <instructions>
                        <!-- org.gjt.*;resolution:='optional', 
                        sun.*;resolution:='optional',
                        schemasMicrosoftComVml,org.joda,com.jidesoft, schemasMicrosoftComOfficeExcel,schemaorg_apache_xmlbeans.*,org.openxmlformats.schemas.drawingml.x2006.chart.impl,org.openxmlformats.*,org.apache.poi.*,
                        org.apache.*;resolution:='optional',com.sun.*;resolution:='optional',com.apple.laf.*;resolution:='optional',apple.laf.*;resolution:='optional',
						

						*;resolution:='optional'

                        -->
                        <Import-Package>schemasMicrosoftComOfficeOffice,
                        schemasMicrosoftComOfficeExcel,org.apache.poi,
                        org.openxmlformats.schemas.spreadsheetml.x2006,
                        com.ibm.uvm.tools,                     
                        org.apache.avalon.framework.logger, org.apache.crimson.jaxp, org.apache.log, org.apache.tools.ant, 
                        org.apache.tools.ant.taskdefs, org.apache.tools.ant.types, org.apache.xml.resolver, org.apache.xml.resolver.tools, org.gjt.xpp, org.jaxen,
                        org.jaxen.dom4j, org.jaxen.pattern, org.jaxen.saxpath, org.relaxng.datatype, org.slf4j.impl, org.xmlpull.v1,
                        schemasMicrosoftComOfficeVml,schemaorg_apache_xmlbeans,org.openxmlformats.schemas.drawingml.x2006.chart.impl,org.openxmlformats,com.sun.*;resolution:=optional,javax.*;resolution:=optional</Import-Package>
                        <Embed-Dependency>*;scope=compile|runtime;inline=true</Embed-Dependency>
                        <!-- we refer also to these classes:

                        javax.crypto, javax.crypto.spec,javax.imageio, javax.imageio.metadata, javax.imageio.stream, javax.jmdns, javax.jms, javax.mail, javax.mail.internet, javax.management, javax.microedition.io, javax.naming,
                        javax.security.auth.x500, javax.servlet, javax.servlet.http, javax.swing, javax.swing.border, javax.swing.event, javax.swing.table, javax.swing.text, javax.swing.tree, javax.xml.bind, javax.xml.validation, javax.xml.xpath, 

                        com.sun.javadoc, com.sun.jdmk.comm, com.sun.msv.datatype, com.sun.msv.datatype.xsd, com.sun.tools.javadoc, 
            -->
                        <Bundle-Activator>${project.groupId}.${project.artifactId}.osgi.Activator</Bundle-Activator>
                        <Embed-Transitive>true</Embed-Transitive>
                        <Export-Package>*;-split-package:=merge-first</Export-Package>
                    </instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>build-for-felix</id>
			<dependencies>
				<dependency>
					<groupId>org.apache.felix</groupId>
					<artifactId>org.apache.felix.main</artifactId>
					<version>4.2.1</version>
					<scope>provided</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>compile</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<pathconvert property="plugins.jars" pathsep="${path.separator}">
											<path refid="maven.runtime.classpath" />
											<map from="${project.build.directory}${file.separator}classes"
												to="" />
										</pathconvert>
										<pathconvert pathsep=" " property="bundles">
											<path path="${plugins.jars}" />
											<mapper>
												<chainedmapper>
													<flattenmapper />
													<globmapper from="*" to="file:modules/*"
														casesensitive="no" />
												</chainedmapper>
											</mapper>
										</pathconvert>
										<propertyfile file="${project.build.directory}/config.properties">
											<entry key="felix.auto.start"
												value="${bundles} file:modules/${project.build.finalName}.jar" />
											<entry key="org.osgi.framework.bootdelegation" value="*" />
										</propertyfile>
										<copy
											file="${maven.dependency.org.apache.felix.org.apache.felix.main.jar.path}"
											tofile="${project.build.directory}/felix.jar" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.2</version>
						<executions>
							<execution>
								<id>create-executable-jar</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${basedir}/src/main/assembly/felix.xml</descriptor>
									</descriptors>
									<finalName>${project.build.finalName}</finalName>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>run-on-felix</id>
			<dependencies>
				<dependency>
					<groupId>org.apache.felix</groupId>
					<artifactId>org.apache.felix.main</artifactId>
					<version>4.2.1</version>
					<scope>provided</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.6</version>
						<configuration>
							<target>
								<property name="vm.args" value="" />
								<pathconvert property="plugins.jars" pathsep="${path.separator}">
									<path refid="maven.runtime.classpath" />
									<map from="${project.build.directory}${file.separator}classes"
										to="" />
								</pathconvert>
								<makeurl property="urls" separator=" ">
									<path path="${plugins.jars}" />
									<path
										location="${project.build.directory}/${project.build.finalName}.jar" />
								</makeurl>
								<propertyfile file="${project.build.directory}/run.properties">
									<entry key="felix.auto.start" value="${urls}" />
									<entry key="felix.auto.deploy.action" value="uninstall,install,update,start" />
									<entry key="org.osgi.framework.storage"
										value="${project.build.directory}${file.separator}felix-cache" />
									<entry key="org.osgi.framework.bootdelegation" value="*" />
									<!-- org.w3c.dom.* are missing from default.properties in felix
										4.2.1, they are present in 3.0.7 -->
									<entry key="org.osgi.framework.system.packages.extra"
										value="org.w3c.dom.css, org.w3c.dom.html, org.w3c.dom.stylesheets, org.w3c.dom.traversal,                                                     org.w3c.dom.ranges,                                                     org.w3c.dom.views,                                                     org.w3c.dom.xpath" />
								</propertyfile>

								<makeurl property="run.properties.url"
									file="${project.build.directory}/run.properties" />

								<java fork="true"
									jar="${maven.dependency.org.apache.felix.org.apache.felix.main.jar.path}">
									<sysproperty key="felix.config.properties" value="${run.properties.url}" />
									<jvmarg line="${vm.args}" />
								</java>

							</target>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
<!-- /* * Copyright 2011 by The Appdapter Project (www.appdapter.org). *
	* Licensed under the Apache License, Version 2.0 (the "License"); * you may
	not use this file except in compliance with the License. * You may obtain
	a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 *
	* Unless required by applicable law or agreed to in writing, software * distributed
	under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES
	OR CONDITIONS OF ANY KIND, either express or implied. * See the License for
	the specific language governing permissions and * limitations under the License.
	*/ -->

