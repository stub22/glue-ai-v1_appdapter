<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.appdapter</groupId>
		<artifactId>org.appdapter.modules.core</artifactId>
		<version>1.1.2</version>
		<relativePath>../org.appdapter.modules.core/pom.xml</relativePath>
	</parent>		
	<artifactId>org.appdapter.lib.remote</artifactId>
	<packaging>jar</packaging>
	<name>org.appdapter.lib.remote - POJO</name>

	<description>Appdapter Maven project including Java/SPARQL Client, produces jar, not bundle.  Excludes concrete SLF4J binding.</description>

	<dependencies>
		<!--  Was using this for compile-edit workarounds, but now it's gone!
		<dependency>
			<groupId>org.jscience</groupId>
			<artifactId>jscience-mathematics</artifactId>
			<version>5.0-SNAPSHOT</version>
			<scope>provided</scope>
		</dependency>		
		-->
		<!-- *************** Compile Deps - mostly OSGi-friendly versions *********************** -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
<!-- org.json.* -->
<dependency>
    <groupId>org.json</groupId>
    <artifactId>json</artifactId>
    <version>20080701</version>
</dependency>
<dependency>
  <groupId>joda-time</groupId>
  <artifactId>joda-time</artifactId>
  <version>2.3</version>
</dependency>
<dependency>
	<groupId>com.ibm.icu</groupId>
	<artifactId>icu4j</artifactId>
	<version>51.2</version>
</dependency>
<dependency>
  <groupId>commons-collections</groupId>
  <artifactId>commons-collections</artifactId>
  <version>3.2.1</version>
</dependency>
<dependency>
  <groupId>commons-lang</groupId>
  <artifactId>commons-lang</artifactId>
  <version>2.4</version>
</dependency>
<dependency>
	<groupId>commons-dbcp</groupId>
	<artifactId>commons-dbcp</artifactId>
	<version>1.3</version>
</dependency>
<dependency>
    <groupId>commons-logging</groupId>
    <artifactId>commons-logging</artifactId>
    <version>1.1.3</version>
</dependency>
<dependency>
	<groupId>commons-httpclient</groupId>
	<artifactId>commons-httpclient</artifactId>
	<version>3.1</version>
</dependency>
<dependency>
    <groupId>org.openrdf.sesame</groupId>
    <artifactId>sesame-repository-event</artifactId>
    <version>2.7.4</version>
</dependency>
<dependency>
    <groupId>org.openrdf.sesame</groupId>
    <artifactId>sesame-repository-http</artifactId>
    <version>2.7.4</version>
</dependency>
<dependency>
<groupId>org.openrdf.sesame</groupId>
<artifactId>sesame-console</artifactId>
<version>2.7.4</version>
</dependency>
<dependency>
<groupId>org.openrdf.sesame</groupId>
<artifactId>sesame-repository-api</artifactId>
<version>2.7.4</version>
</dependency>


		<dependency>
			<groupId>${project.groupId}</groupId>
			<!-- Updated 2013-07-17 from 			<artifactId>ext.bundle.jena_all_264</artifactId>
			-->
			<artifactId>ext.bundle.jena_all_2_10_1</artifactId>
            <version>${project.version}</version>
		 <type>jar</type>
		</dependency>	

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ext.bundle.xml.dom4j_161</artifactId>
			<version>${project.version}</version>
		</dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>ext.bundle.osgi.common</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>org.appdapter.lib.core</artifactId>
            <version>${project.version}</version>
        </dependency>

		<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>2.3</version>
		</dependency>		
		<dependency>
			<!--
				Needed at compile time so we can provide a utility to force the properties resource URL in, 
				due to TCCL issues with Log4J's default startup in OSGi environment.	
			-->

			<groupId>org.apache.log4j</groupId>
			<artifactId>com.springsource.org.apache.log4j</artifactId>
			<version>1.2.16</version>
			<scope>provided</scope>			

		</dependency>				


        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.5</version>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.3.157</version>
		</dependency>				

<!--		Problems in Felix, because 
				A) System Bundle #0 supplies the JAXP APIs at version 0.0., 
				B) Dom4J specifies broad "uses" constraints on its exports.
				C) Dom4J specifies version number >1.0 on SOME of its imports.
			
	 [java] javax.xml.parsers; version=0.0.0.1_006_JavaSE imported by:
     [java]    org.apache.servicemix.bundles.dom4j [255]
     [java]    org.apache.servicemix.bundles.xpp3 [283]
     [java]    org.apache.servicemix.bundles.xmlresolver [342]
     [java]    org.apache.servicemix.bundles.xerces [256]
     [java]    com.springsource.org.apache.log4j [273]
     [java]    scala-library [249]
	 
	 

		<dependency>
			<groupId>org.apache.servicemix.bundles</groupId>
			<artifactId>org.apache.servicemix.bundles.dom4j</artifactId>
			<version>1.6.1_4</version>
			<exclusions>
				<exclusion>
					<artifactId>xml-apis</artifactId>
					<groupId>xml-apis</groupId>
				</exclusion>
			</exclusions>
		</dependency>
-->		
		<!-- *************** Runtime Deps *********************** -->


		<!--
		<dependency>
			<groupId>org.apache.servicemix.specs</groupId>
			<artifactId>org.apache.servicemix.specs.jaxp-api-1.4</artifactId>
			<version>1.6.0</version>
			<scope>runtime</scope>
		</dependency>
		-->
		
		
		
		<!-- ************************** Test Deps *********************** -->		
 
		<dependency>
			<groupId>org.apache.servicemix.bundles</groupId>
			<artifactId>org.apache.servicemix.bundles.junit</artifactId>
			<version>4.7_3</version>
			<scope>test</scope>
        </dependency>
	  
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ext.bundle.math.jscience_50SNAP</artifactId>
	    	<!-- Now frozen to use version 1.0.9, so we don't have to build JScience wrapper anymore -->
			<version>1.0.9</version>
		</dependency>
		

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.9</version>
		</dependency>
		 <!-- SLF4J Test Bindings.
		 We can change the scope during unit testing, but don't commit to SVN with scope other than "test" 
		 -->
		 <!--
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.6.2</version>
	 
			<scope>test</scope>
		</dependency>
		-->
	 
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.5</version>
			<scope>test</scope>
		</dependency>
	 
	</dependencies>
	
	<build>
	  <!--
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>
	  -->
		<plugins>
			<plugin>
				<groupId>org.scala-tools</groupId>
				<artifactId>maven-scala-plugin</artifactId>
				<version>2.15.2</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<!-- Not currently using any tests
							<goal>testCompile</goal>
							--> 
						</goals>
						<configuration>

<!--			This works for compiling, but not for displaying the source folders in Netbeans.
				So we are instead using SVN externals to create a tree in Maven-preferred form.
							<sourceDir>../../src_scala</sourceDir>
							<sourceDir>../../src_java</sourceDir>
-->
						</configuration>
						
					</execution>
				</executions>
			</plugin>

			<!--
			 <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>build-helper-maven-plugin</artifactId> 
				<executions> <execution> <id>add-source</id> <phase>generate-sources</phase> 
				<goals> <goal>add-source</goal> </goals> <configuration> <sources> <source>src/main/scala</source> 			
			</sources> </configuration> </execution> </executions> </plugin> 
				-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.6</version><!--$NO-MVN-MAN-VER$-->
				<configuration>
					<!--  FIXME:  If we dont skipTests, then the build "fails" -->
					<skipTests>true</skipTests>
					
					<useFile>false</useFile>
					<disableXmlReport>true</disableXmlReport>
          <!-- If you have classpath issue like NoDefClassError,... -->
          <!-- useManifestOnlyJar>false</useManifestOnlyJar -->
					<includes>
						
						<include>**/*Test.*</include>
						<include>**/*Suite.*</include>
					</includes>
				</configuration>
			</plugin>


		</plugins>
		<pluginManagement>
		  
		</pluginManagement>
	</build>
</project>
<!--
/*
 *  Copyright 2011 by The Appdapter Project (www.appdapter.org).
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
-->