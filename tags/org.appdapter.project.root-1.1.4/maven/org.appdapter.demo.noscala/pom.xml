<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.appdapter</groupId>
		<artifactId>org.appdapter.modules.demo</artifactId>
		<version>1.1.4</version>
		<relativePath>../org.appdapter.modules.demo/pom.xml</relativePath>
	</parent>
	
	<artifactId>org.appdapter.demo.noscala</artifactId>
	<packaging>jar</packaging>
	<name>${project.artifactId} - POJO - minimal</name>
	<description>Builds java code only, produces runnable jar with concrete SLF4J binding to Log4J.
		Uses only deps to Maven-Central repo.  Does NOT use lib.core - compiles all code internally.
	</description>

	<build>
		<!--  	Uses relative paths to source, no SVN:Externals needed.  -->
		<sourceDirectory>../../src_java</sourceDirectory>
		<testSourceDirectory>../../test_java</testSourceDirectory>
		<resources>
			<resource>
				<directory>../../src_resources</directory>	
			</resource>
		</resources>
		<plugins>
		  <plugin>
			 <!-- there are no rules of enforment (this overrides parent) --> 
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-enforcer-plugin</artifactId>
			  <version>1.3.1</version>
			  <executions>
				<execution>
				  <id>enforce</id>
				  <goals>
					<goal>enforce</goal>
				  </goals>
				  <configuration>
					<rules>
					  <AlwaysPass />
					</rules>
				  </configuration>
				</execution>
			  </executions>
		  </plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- In this project, we make maximum use of Maven's transitive dependency fetching.
			In the org.appdapter.lib.core project (and all bundles), we are much more
			careful with marking deps by explicit scope and version
		-->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>org.appdapter.bundle.fileconv</artifactId>
            <version>${project.version}</version>
		</dependency>				
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.3.157</version>
		</dependency>
		<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>2.3</version>
		</dependency>			
		<!-- *************** Runtime Deps *********************** -->

			<!-- In THIS project, we do not make a point of declaring
				our transitive runtime deps.
				That IS done, however, in org.appdapter.lib.core
			-->
		<dependency>
			<artifactId>slf4j-log4j12</artifactId>
			<groupId>org.slf4j</groupId>
			<type>jar</type>
			<version>1.7.5</version>
		</dependency>		
		<!-- *************** Test Deps *********************** 
		
		2013-07-13 these are out of date, now that we are using Jena 2.10.1.
		
		-->
			<!-- Junit itself is picked up transitively by SDB.  
				 Same comment regarding explicit/implicit applies as for runtime above.
			-->
		<dependency>
			<groupId>com.hp.hpl.jena</groupId>
			<artifactId>arq</artifactId>
			<version>2.8.7</version>
			<classifier>tests</classifier>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>log4j</artifactId>
					<groupId>log4j</groupId>
				</exclusion>
			  <exclusion>
				  <artifactId>slf4j-log4j12</artifactId>
				  <groupId>org.slf4j</groupId>
			  </exclusion>
			  <exclusion>
				   <artifactId>slf4j-api</artifactId>
				   <groupId>org.slf4j</groupId>
			   </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.hp.hpl.jena</groupId>
			<artifactId>jena</artifactId>
			<version>2.6.4</version>
			<classifier>tests</classifier>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>log4j</artifactId>
					<groupId>log4j</groupId>
				</exclusion>
			  <exclusion>
				  <artifactId>slf4j-log4j12</artifactId>
				  <groupId>org.slf4j</groupId>
			  </exclusion>
			  <exclusion>
				   <artifactId>slf4j-api</artifactId>
				   <groupId>org.slf4j</groupId>
			   </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ext.bundle.xml.dom4j_161</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>org.osgi.core</artifactId>
					<groupId>org.apache.felix</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ext.bundle.jena_all_2_10_1</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>org.osgi.core</artifactId>
					<groupId>org.apache.felix</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>org.appdapter.lib.core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ext.bundle.math.jscience_50SNAP</artifactId>
			<version>1.0.9</version>
			<exclusions>
				<exclusion>
					<artifactId>org.osgi.core</artifactId>
					<groupId>org.apache.felix</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<artifactId>slf4j-api</artifactId>
			<groupId>org.slf4j</groupId>
			<type>jar</type>
			<version>1.7.5</version>

		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>

<!--
/*
 *  Copyright 2011 by The Appdapter Project (www.appdapter.org).
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
-->
