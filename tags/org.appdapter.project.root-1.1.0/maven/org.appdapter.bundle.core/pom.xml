
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.appdapter</groupId>
		<artifactId>org.appdapter.modules.core</artifactId>
		<version>1.1.0</version>
		<relativePath>../org.appdapter.modules.core/pom.xml</relativePath>
	</parent>	

	<artifactId>org.appdapter.bundle.core</artifactId>
	<packaging>bundle</packaging>
	<name>${project.artifactId} - OSGi - core + registry</name>
	<description>Primary Appdapter OSGi Bundle, "depend on me!", has no dependencies on a particular 
			OSGi framework implementation, no SLF4J concrete binding, and no builtin shell.
			Includes the contents of both the "core" and "registry" bundes from the "lib" tier.
	</description>	

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>org.appdapter.lib.core</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>org.appdapter.lib.registry</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ext.bundle.osgi.common</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.core</artifactId>
			<version>4.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.compendium</artifactId>
			<version>4.2.0</version>
		</dependency>
			
		<dependency>
			<artifactId>h2</artifactId>
			<groupId>com.h2database</groupId>
			<type>jar</type>
			<version>1.3.157</version>
			<scope>runtime</scope>			
		</dependency>
		<dependency>
			<artifactId>slf4j-api</artifactId>
			<groupId>org.slf4j</groupId>
			<type>jar</type>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<artifactId>scala-library</artifactId>
			<groupId>com.weiglewilczek.scala-lang-osgi</groupId>
			<type>jar</type>
			<version>2.8.1</version>
		</dependency>
		<dependency>
			<artifactId>ext.bundle.jena_all_264</artifactId>
			<groupId>${project.groupId}</groupId>
			<type>jar</type>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ext.bundle.math.jscience_50SNAP</artifactId>
			<type>jar</type>
			<version>1.0.9</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ext.bundle.xml.dom4j_161</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
        <!-- Included ow2 bundle to export apache.commons.logging.  
            Needed by org.apache.poi -->
        <dependency>
            <groupId>org.ow2.bundles</groupId>
            <artifactId>ow2-bundles-externals-commons-logging</artifactId>
            <version>1.0.33</version>
            <scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging-api</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Included servicemix bundle to export apache.commons.codec.  
            Needed by org.apache.poi -->
        <dependency>
            <groupId>org.apache.servicemix.bundles</groupId>
            <artifactId>org.apache.servicemix.bundles.commons-codec</artifactId>
            <version>1.3_3</version>
            <scope>runtime</scope>
        </dependency>
       <dependency>
           <groupId>org.openl.rules</groupId>
           <artifactId>org.openl.lib.poi.dev</artifactId>
           <version>5.9.4.1</version>
           <scope>runtime</scope>
       </dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.2.0</version>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<!-- org.gjt.*;resolution:='optional', -->
						<Import-Package>com.sun.*;resolution:='optional', org.apache.*;resolution:='optional', org.h2, *</Import-Package>
						<Bundle-Activator>org.appdapter.osgi.core.AppdapterCoreBundleActivator</Bundle-Activator>
						<Export-Package>org.appdapter.*, au.com.bytecode.opencsv.*</Export-Package>
						<!-- Horrid workaround for Class.forName() used in DynamicCachingComponentAssembler, could widen it to "*",
							but better to get Jena code fixed to allow classloader setup.
						-->
						<DynamicImport-Package>org.cogchar.*</DynamicImport-Package>
                        						
						<!--
						arq.*,com.hp.hpl.jena.*,org.openjena.*,etc.*,vocabularies.*
						
						<Private-Package>org.xmldb.*,riotcmd.*</Private-Package>
						-->						
                        <Private-Package>org.apache.poi.*, org.apache.xmlbeans.*, org.openxmlformats.*, schemaorg_apache_xmlbeans.*, schemasMicrosoftComOfficeExcel.*, schemasMicrosoftComOfficeOffice.*, schemasMicrosoftComVml.*</Private-Package>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>build-for-felix</id>
			<dependencies>
				<dependency>
					<groupId>org.apache.felix</groupId>
					<artifactId>org.apache.felix.main</artifactId>
					<version>3.0.7</version>
					<scope>provided</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>compile</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<pathconvert property="plugins.jars" pathsep="${path.separator}">
											<path refid="maven.runtime.classpath" />
											<map from="${project.build.directory}${file.separator}classes" to="" />
										</pathconvert>
										<pathconvert pathsep=" " property="bundles">
											<path path="${plugins.jars}" />
											<mapper>
												<chainedmapper>
													<flattenmapper />
													<globmapper from="*" to="file:modules/*" casesensitive="no" />
												</chainedmapper>
											</mapper>
										</pathconvert>
										<propertyfile file="${project.build.directory}/config.properties">
											<entry key="felix.auto.start" value="${bundles} file:modules/${project.build.finalName}.jar" />
											<entry key="org.osgi.framework.bootdelegation" value="*" />
										</propertyfile>
										<copy file="${maven.dependency.org.apache.felix.org.apache.felix.main.jar.path}" tofile="${project.build.directory}/felix.jar" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.2</version>
						<executions>
							<execution>
								<id>create-executable-jar</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${basedir}/src/main/assembly/felix.xml</descriptor>
									</descriptors>
									<finalName>${project.build.finalName}</finalName>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>run-on-felix</id>
			<dependencies>
				<dependency>
					<groupId>org.apache.felix</groupId>
					<artifactId>org.apache.felix.main</artifactId>
					<version>3.0.7</version>
					<scope>provided</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.6</version>
						<configuration>
							<target>
								<property name="vm.args" value="" />
								<pathconvert property="plugins.jars" pathsep="${path.separator}">
									<path refid="maven.runtime.classpath" />
									<map from="${project.build.directory}${file.separator}classes" to="" />
								</pathconvert>
								<makeurl property="urls" separator=" ">
									<path path="${plugins.jars}" />
									<path location="${project.build.directory}/${project.build.finalName}.jar" />
								</makeurl>
								<propertyfile file="${project.build.directory}/run.properties">
									<entry key="felix.auto.start" value="${urls}" />
									<entry key="felix.auto.deploy.action" value="uninstall,install,update,start" />
									<entry key="org.osgi.framework.storage" value="${project.build.directory}${file.separator}felix-cache" />
									<entry key="org.osgi.framework.bootdelegation" value="*" />
								</propertyfile>
								
								<makeurl property="run.properties.url" file="${project.build.directory}/run.properties" />
										
								<java fork="true" jar="${maven.dependency.org.apache.felix.org.apache.felix.main.jar.path}">
									<sysproperty key="felix.config.properties" value="${run.properties.url}" />
									<jvmarg line="${vm.args}" />
								</java>
								
							</target>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
<!--
/*
 *  Copyright 2011 by The Appdapter Project (www.appdapter.org).
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
-->