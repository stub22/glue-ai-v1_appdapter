<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!--
	
	This project is used only for releasing to Maven central.
	It's purpose is to include all our source directories in the folder which gets 
	tagged by release:prepare and checked-out+built+delivered by release:perform.
	
	Using Sonatype parent as described here:
		https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide#SonatypeOSSMavenRepositoryUsageGuide-7a.1.POMandsettingsconfig
		
	Their pom.xml file is viewable here:
	
	http://repo1.maven.org/maven2/org/sonatype/oss/oss-parent/7/oss-parent-7.pom
	-->
	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>	

	<!--
http://stackoverflow.com/questions/3684664/maven-property-substitution-not-done-for-project-version-tag-of-pom/3685248#3685248

hard code the version in the top project/version element.
hard code the version in the project/parent/version element of children.
children inherit the version unless they want to override it
use ${project.groupId} and ${project.version} for inter module dependencies.	

Version-less parent will be allowed in Maven 3.1.
-->
	<groupId>org.appdapter</groupId>
	<artifactId>org.appdapter.project.root</artifactId>
	<version>1.2.3-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>${project.artifactId} - Root pom, linked to Sonatype repo parent</name>
	<description>Project Root Folder pom.xml - includes all code + doc directories when snapped.</description>
	<url>http://www.appdapter.org</url>
	<inceptionYear>2010</inceptionYear>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.appdapter.org/license.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>	
	<modules>
		<module>maven/org.appdapter.modules.all</module>	
	</modules>

	<!--
	connection - used for read access to Maven (e.g. for svn-update)
	developerConnection - requires a write-access connection (e.g. for svn-commit)
	url - human-browsable view of SVN
	-->

	<scm>
		<connection>scm:svn:https://subversion.assembla.com/svn/appdapter/trunk/</connection>
		<developerConnection>scm:svn:https://subversion.assembla.com/svn/appdapter/trunk/</developerConnection>
		<url>https://www.assembla.com/code/appdapter/subversion/nodes/trunk/</url>
	</scm>


	<properties>
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>
		<encoding>UTF-8</encoding>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<netbeans.hint.license>appdapter-apache20</netbeans.hint.license>

		<!-- global version settings -->
		<activemq.version>5.4.2</activemq.version>
		<appdapter.msg.version>1.0.5</appdapter.msg.version>
		<appdapter.jscience.version>1.0.9</appdapter.jscience.version>
		<avro.version>1.7.4</avro.version>
		<backport.version>2.2</backport.version>
		<com.ibm.icu.version>3.4.5</com.ibm.icu.version>
		<commons.codec.version>1.6</commons.codec.version>
		<commons.math3.version>3.1.1</commons.math3.version>
		<commons.logging.version>1.1.3</commons.logging.version>
		<commons.lang.version>2.4</commons.lang.version>
		<dom4j.version>1.6.1</dom4j.version>
		<felix.gogo.shell.version>0.10.0</felix.gogo.shell.version>
		<felix.gogo.command.version>0.10.0</felix.gogo.command.version>
		<felix.gogo.runtime.version>0.10.0</felix.gogo.runtime.version>
		<felix.shell.remote.version>1.1.2</felix.shell.remote.version>
		<felix.org.osgi.core.version>1.4.0</felix.org.osgi.core.version>
		<geronimo.version>1.1.1</geronimo.version>
		<guava.version>11.0</guava.version>
		<httpclient.version>4.3.1</httpclient.version>
		<httpcore.version>4.3</httpcore.version>
		<h2database.version>1.3.157</h2database.version>
		<io.netty.version>3.4.0.Final</io.netty.version>
		<jena.version>2.10.1</jena.version>
		<jena-sdb.version>1.3.6</jena-sdb.version>
		<jena-tdb.version>0.10.1</jena-tdb.version>
		<jena-iri.version>0.9.6</jena-iri.version>
		<jena-fuseki.version>0.2.7</jena-fuseki.version>
		<jide.version>3.5.5</jide.version>
		<jscience.groupId>org.jscience</jscience.groupId>
		<jscience.math.artifactId>jscience-mathematics</jscience.math.artifactId>
		<jscience.version>5.0-SNAPSHOT</jscience.version>
		<junit.version>4.8.2</junit.version>
		<lib.poi.dev.version>5.9.4.1</lib.poi.dev.version>
		<log4j.version>1.2.16</log4j.version>
		<mina.version>1.0.1</mina.version>
		<opencsv.version>2.3</opencsv.version>
		<org.codehaus.jackson.version>1.8.8</org.codehaus.jackson.version>
		<org.jboss.netty.version>3.2.7.Final</org.jboss.netty.version>
		<org.mortbay.jetty.version>6.1.26</org.mortbay.jetty.version>
		<osgi.core.version>4.2.0</osgi.core.version>
		<ooxml.schemas.version>1.0</ooxml.schemas.version>
		<paranamer.version>2.3</paranamer.version>
		<pax.version>1.1.2</pax.version>
		<poi.version>3.9</poi.version>
		<qpid.version>0.10</qpid.version>
		<scala.version>2.10.2</scala.version>		
		<scalatest.version>1.4.1</scalatest.version>                
		<servlet.api.version>2.5</servlet.api.version>
		<servicemix.bundles.javax.mail.version>1.4.1_4</servicemix.bundles.javax.mail.version>
		<servicemix.bundles.javax.inject.version>1_2</servicemix.bundles.javax.inject.version>
		<servicemix.bundles.junit.version>4.7_3</servicemix.bundles.junit.version>
		<servicemix.bundles.lucene.version>3.0.3_2</servicemix.bundles.lucene.version>
		<servicemix.bundles.xerces.version>2.11.0_1</servicemix.bundles.xerces.version>
		<servicemix.bundles.xmlresolver.version>1.2_3</servicemix.bundles.xmlresolver.version>
		<servicemix.specs.activation.api.version>1.8.0</servicemix.specs.activation.api.version>
		<slf4j.version>1.7.5</slf4j.version>
		<snappy.version>1.0.1-rc3</snappy.version>
		<velocity.version>1.7</velocity.version>
		<wagon.webdav.version>1.0-beta-7</wagon.webdav.version>
		<xmlbeans.version>2.5.0</xmlbeans.version>
		<!-- Plugin versions -->
		<version.license.maven.plugin>1.7</version.license.maven.plugin>
		<version.maven.antrun.plugin>1.6</version.maven.antrun.plugin>
		<version.maven.assembly.plugin>2.2</version.maven.assembly.plugin>
		<version.maven.bundle.plugin>2.3.7</version.maven.bundle.plugin>
		<version.maven.compiler.plugin>2.3.2</version.maven.compiler.plugin>
		<version.maven.enforcer.plugin>1.3.1</version.maven.enforcer.plugin>
		<version.maven.javadoc.plugin>2.10.1</version.maven.javadoc.plugin>
		<version.maven.gpg.plugin>1.4</version.maven.gpg.plugin>
		<version.maven.idea.plugin>2.2</version.maven.idea.plugin>
		<version.maven.resources.plugin>2.4.3</version.maven.resources.plugin>
		<version.maven.site.plugin>3.4</version.maven.site.plugin>
		<version.maven.surefire.plugin>2.9</version.maven.surefire.plugin>
		<version.maven.scala.plugin>2.15.2</version.maven.scala.plugin>
		<version.wagon.ftp>1.0-beta-6</version.wagon.ftp>
		<version.org.apache.felix.main>4.2.1</version.org.apache.felix.main>
	</properties>	

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>backport-util-concurrent</groupId>
				<artifactId>backport-util-concurrent</artifactId>
				<version>${backport.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2database.version}</version>
			</dependency>
			<dependency>
				<groupId>com.ibm.icu</groupId>
				<artifactId>com.springsource.com.ibm.icu</artifactId>
				<version>${com.ibm.icu.version}</version>
			</dependency>
			<dependency>
				<groupId>com.jidesoft</groupId>
				<artifactId>jide-oss</artifactId>
				<version>${jide.version}</version>
			</dependency>
			<dependency>
				<groupId>com.thoughtworks.paranamer</groupId>
				<artifactId>paranamer</artifactId>
				<type>jar</type>
				<version>${paranamer.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons.lang.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${commons.logging.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commons.codec.version}</version>
			</dependency>
			<dependency>
				<groupId>dom4j</groupId>
				<artifactId>dom4j</artifactId>
				<version>${dom4j.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty</artifactId>
				<version>${io.netty.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>   
				<version>${servlet.api.version}</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.opencsv</groupId>
				<artifactId>opencsv</artifactId>
				<version>${opencsv.version}</version>
			</dependency>
			<dependency>
				<groupId>org.appdapter</groupId>
				<artifactId>ext.bundle.math.jscience_50SNAP</artifactId>
				<version>${appdapter.jscience.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-all</artifactId>
				<version>${activemq.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro</artifactId>
				<version>${avro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro-ipc</artifactId>
				<version>${avro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-math3</artifactId>
				<version>${commons.math3.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.main</artifactId>
				<version>${version.org.apache.felix.main}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.osgi.core</artifactId>
				<version>${felix.org.osgi.core.version}</version>
			</dependency>
			<dependency>
				<artifactId>org.apache.felix.gogo.shell</artifactId>
				<groupId>org.apache.felix</groupId>	
				<version>${felix.gogo.shell.version}</version>
			</dependency>
			<dependency>
				<artifactId>org.apache.felix.gogo.command</artifactId>
				<groupId>org.apache.felix</groupId>
				<version>${felix.gogo.command.version}</version>
			</dependency>
			<dependency>
				<artifactId>org.apache.felix.gogo.runtime</artifactId>
				<groupId>org.apache.felix</groupId>
				<version>${felix.gogo.runtime.version}</version>
			</dependency>
			<dependency>
				<artifactId>org.apache.felix.shell.remote</artifactId>
				<groupId>org.apache.felix</groupId>
				<version>${felix.shell.remote.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-jms_1.1_spec</artifactId>
				<version>${geronimo.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>apache-jena-libs</artifactId>
				<type>pom</type>
				<version>${jena.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>jena-core</artifactId>
				<version>${jena.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>jena-tdb</artifactId>
				<version>${jena-tdb.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>jena-iri</artifactId>
				<version>${jena-iri.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>jena-sdb</artifactId>
				<type>jar</type>
				<version>${jena-sdb.version}</version>
			</dependency>
			<dependency>		
				<groupId>org.apache.log4j</groupId>
				<artifactId>com.springsource.org.apache.log4j</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.mina</groupId>
				<artifactId>mina-core</artifactId>
				<version>${mina.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.mina</groupId>
				<artifactId>mina-filter-ssl</artifactId>
				<version>${mina.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>${poi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>ooxml-schemas</artifactId>
				<version>${ooxml.schemas.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml-schemas</artifactId>
				<version>${poi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${poi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.qpid</groupId>
				<artifactId>qpid-client</artifactId>
				<version>${qpid.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.qpid</groupId>
				<artifactId>qpid-common</artifactId>
				<version>${qpid.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.servicemix.bundles</groupId>
				<artifactId>org.apache.servicemix.bundles.junit</artifactId>
				<version>${servicemix.bundles.junit.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.servicemix.bundles</groupId>
				<artifactId>org.apache.servicemix.bundles.lucene</artifactId>
				<version>${servicemix.bundles.lucene.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.servicemix.bundles</groupId>
				<artifactId>org.apache.servicemix.bundles.javax.mail</artifactId>
				<version>${servicemix.bundles.javax.mail.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.servicemix.specs</groupId>
				<artifactId>org.apache.servicemix.specs.activation-api-1.1</artifactId>
				<version>${servicemix.specs.activation.api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.servicemix.bundles</groupId>
				<artifactId>org.apache.servicemix.bundles.xmlresolver</artifactId>
				<version>${servicemix.bundles.xmlresolver.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.servicemix.bundles</groupId>
				<artifactId>org.apache.servicemix.bundles.xerces</artifactId>
				<version>${servicemix.bundles.xerces.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.servicemix.bundles</groupId>
				<artifactId>org.apache.servicemix.bundles.javax-inject</artifactId>
				<version>${servicemix.bundles.javax.inject.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity</artifactId>
				<type>jar</type>
				<version>${velocity.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlbeans</groupId>
				<artifactId>xmlbeans</artifactId>
				<version>${xmlbeans.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>${org.codehaus.jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-core-asl</artifactId>
				<version>${org.codehaus.jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.netty</groupId>
				<artifactId>netty</artifactId>			
				<version>${org.jboss.netty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty</artifactId>
				<type>jar</type>
				<version>${org.mortbay.jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-util</artifactId>
				<type>jar</type>
				<version>${org.mortbay.jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.core</artifactId>
				<!-- TODO:  Are we ready for 4.3? -->
				<version>${osgi.core.version}</version>		
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.compendium</artifactId>
				<!-- TODO:  Are we ready for 4.3? -->
				<version>${osgi.core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.openl.rules</groupId>
				<artifactId>org.openl.lib.poi.dev</artifactId>
				<version>${lib.poi.dev.version}</version>
			</dependency>
			<dependency>
				<groupId>org.ops4j.pax.web</groupId>
				<artifactId>pax-web-jetty-bundle</artifactId>
				<version>${pax.version}</version>
			</dependency>
			<dependency>
				<groupId>org.ops4j.pax.web</groupId>
				<artifactId>pax-web-extender-war</artifactId>
				<version>${pax.version}</version>
			</dependency>
			<dependency>
				<groupId>org.ops4j.pax.web</groupId>
				<artifactId>pax-web-jsp</artifactId>
				<version>${pax.version}</version>
			</dependency>
			<dependency>
				<groupId>org.ops4j.pax.web</groupId>
				<artifactId>pax-web-extender-whiteboard</artifactId>
				<version>${pax.version}</version>
			</dependency>
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-library</artifactId>
				<version>${scala.version}</version>
			</dependency>
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-reflect</artifactId>
				<version>${scala.version}</version>
			</dependency>
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-compiler</artifactId>
				<version>${scala.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.xerial.snappy</groupId>
				<artifactId>snappy-java</artifactId>
				<type>jar</type>
				<version>${snappy.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<repositories>

		<!-- Previously Used for JScience and Javolution -->
		<!--
		<repository>
 
				<id>maven.java.net-SNAP</id>
				<name>maven.java.net SNAPSHOTS Repo</name>
				<url>https://maven.java.net/content/repositories/snapshots/</url>
		</repository>
		-->
		<!-- 	Explicit reference to Maven central ... ensures it is always checked first (we think),
				which prevents downloads of broken files from sonatype-public, in particular: 
				scala-library-2.10.2.jar.
		-->

		<!--repository-->
		<!-- Which deps do we still need this for? Moved from ext.bundle.jena.full -->
		<!--id>apache-repo-snapshots</id>
			<url>https://repository.apache.org/content/repositories/snapshots/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository-->
		<repository>
			<id>maven-central</id>
			<url>http://repo.maven.apache.org/maven2/</url>
		</repository>

		<repository>
			<id>sonatype-public</id>
			<name>sonatype public</name>
			<url>https://oss.sonatype.org/content/groups/public/</url>
		</repository>

		<!-- Snapshots are included in sonatype-public.
		<repository>
			<id>sonatype-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</repository>
		-->

		<!-- com.sun.xml.parses:jaxp-ri:1.4.4 is available in ServiceMix' repo -->
		<repository>
			<id>servicemix</id>
			<name>Apache ServiceMix Repository</name>
			<url>http://svn.apache.org/repos/asf/servicemix/m2-repo</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<!-- Needed for "good" log4J bundle -->
		<repository>
			<id>com.springsource.repository.bundles.external</id>
			<name>Spring EBR External Release Repository</name>
			<url>http://repository.springsource.com/maven/bundles/external</url>
		</repository>

		<!-- Needed during staging tests, this repo should be (TODO!) used only when an appropriate profile is enabled. -->
		<repository>
			<id>sonatype-staging</id>
			<name>sonatype staging</name>
			<url>https://oss.sonatype.org/content/groups/staging/</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>maven-central</id>
			<url>http://repo.maven.apache.org/maven2/</url>
		</pluginRepository>
	</pluginRepositories>

	<distributionManagement>
		<site>
			<id>nexus-site</id>
			<!--url>dav:http://maple.robokind.us:8081/nexus/content/sites/site/org/appdapter</url-->
			<url>dav://maple.robokind.us:8081/nexus/content/sites/site/org/appdapter</url>
		</site>
	</distributionManagement>

	<build>
		<directory>target</directory>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>${version.wagon.ftp}</version>
			</extension>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-webdav-jackrabbit</artifactId>
				<version>${wagon.webdav.version}</version>
			</extension>
		</extensions>

		<plugins>

			<!--
			  plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
			</plugin -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-idea-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
			</plugin>

			<!--
				plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin -->

			<!--
			plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
			</plugin -->

			<plugin>
				<artifactId>maven-site-plugin</artifactId>
				<version>${version.maven.site.plugin}</version>
			</plugin>

		</plugins>


		<!-- wouldn't be nice if we had a parent pom! (we'd get rid of everything below (and some above)) 
		
			Stu: It is conceivable that we could have a parent glue-ai template.
			However, that means that glue-ai would need to be released into maven-central as yet another project.
		
		-->

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<configuration>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<!--   allowTimestampedSnapshots>true</allowTimestampedSnapshots -->
						<!-- New in plugin version 2.2, but does not work correctly yet.
						See:   https://jira.codehaus.org/browse/MRELEASE-695
						<tagNameFormat>v@{project.version}</tagNameFormat>
						 -->
					</configuration>
				</plugin>

				<!--
              <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-enforcer-plugin</artifactId>
                 <version>1.3.1</version>
                 <executions>
                   <execution>
                       <id>enforce</id>
                       <configuration>
                         <rules>
                           <DependencyConvergence>
                           </DependencyConvergence>
                         </rules>
                       </configuration>
                       <goals>
                         <goal>enforce</goal>
                       </goals>
					   </execution>
                 </executions>
               </plugin>
			  -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${version.maven.enforcer.plugin}</version>
				</plugin>

				<plugin>
					<groupId>org.scala-tools</groupId>
					<artifactId>maven-scala-plugin</artifactId>
					<configuration>
						<!-- On Frogbait this option drops Scala proj build time about 20% -->
						<jvmArgs>
							<jvmArg>-XX:+TieredCompilation</jvmArg>
						</jvmArgs>
						<displayCmd>true</displayCmd>	
						<!-- Compile ONLY the Scala code.  The Java code is compiled by a previous goal.
								This works OK as long as we don't refer to Scala classes from Java.
								
								Without this instruction, the Scala compiler is unable to handle our
								Tao/Zen coreferent types.   Don't know why these types are OK if
								Java is compiled before Scala but not if everything is compiled together.
								Will return to this issue later.
						-->


						<sendJavaToScalac>false</sendJavaToScalac>		
						<configuration>
							<args>			
								<arg>-make:transitive</arg>
								<arg>-dependencyfile</arg>
								<arg>${project.build.directory}/.scala_dependencies</arg>
							</args>
						</configuration>						
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${version.maven.gpg.plugin}</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>deploy</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${version.maven.compiler.plugin}</version>
					<configuration>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${version.maven.resources.plugin}</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${version.maven.surefire.plugin}</version>
					<configuration>
						<!--  FIXME:  If we dont skipTests, then the build "fails" -->
						<skipTests>true</skipTests>

						<useFile>false</useFile>
						<disableXmlReport>true</disableXmlReport>
						<!-- If you have classpath issue like NoDefClassError,... -->
						<!-- useManifestOnlyJar>false</useManifestOnlyJar -->
						<includes>
							<include>**/*Test.*</include>
							<include>**/*Suite.*</include>
						</includes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-idea-plugin</artifactId>
					<version>${version.maven.idea.plugin}</version>
					<configuration>
						<downloadSources>true</downloadSources>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>${version.maven.bundle.plugin}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>${version.license.maven.plugin}</version>
				<configuration>
					<goal>third-party-report</goal>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${version.maven.javadoc.plugin}</version>
				<reportSets>
					<reportSet>
						<id>aggregate</id>
						<configuration>
						</configuration>
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
	<profiles>
		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>${version.maven.gpg.plugin}</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>build-for-felix</id>
			<dependencies>
				<dependency>
					<groupId>org.apache.felix</groupId>
					<artifactId>org.apache.felix.main</artifactId>
				</dependency>
				<!-- To include a shell:
				<dependency>
					<groupId>org.apache.felix</groupId>
					<artifactId>org.apache.felix.gogo.shell</artifactId>
					<version>0.6.1</version>
				</dependency>
				-->
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${version.maven.antrun.plugin}</version>
						<executions>
							<execution>
								<id>compile</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<pathconvert property="plugins.jars" pathsep="${path.separator}">
											<path refid="maven.runtime.classpath" />
											<map from="${project.build.directory}${file.separator}classes" to="" />
										</pathconvert>
										<pathconvert pathsep=" " property="bundles">
											<path path="${plugins.jars}" />
											<mapper>
												<chainedmapper>
													<flattenmapper />
													<globmapper from="*" to="file:modules/*" casesensitive="no" />
												</chainedmapper>
											</mapper>
										</pathconvert>
										<propertyfile file="${project.build.directory}/config.properties">
											<entry key="felix.auto.start" value="${bundles} file:modules/${project.build.finalName}.jar" />
											<entry key="org.osgi.framework.bootdelegation" value="*" />
										</propertyfile>
										<copy file="${maven.dependency.org.apache.felix.org.apache.felix.main.jar.path}" tofile="${project.build.directory}/felix.jar" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${version.maven.assembly.plugin}</version>
						<executions>
							<execution>
								<id>create-executable-jar</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${basedir}/src/main/assembly/felix.xml</descriptor>
									</descriptors>
									<finalName>${project.build.finalName}</finalName>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>run-on-felix</id>
			<dependencies>
				<dependency>
					<groupId>org.apache.felix</groupId>
					<artifactId>org.apache.felix.main</artifactId>
				</dependency>
				<dependency>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</dependency>
				<dependency>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</dependency>
				<!-- org.apache.felix:org.apache.felix.gogo.shell:0.6.1 useless from Maven since stdin is swallowed -->
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${version.maven.antrun.plugin}</version>
						<configuration>
							<target>
								<property name="vm.args" value="" />
								<pathconvert property="plugins.jars" pathsep="${path.separator}">
									<path refid="maven.runtime.classpath" />
									<map from="${project.build.directory}${file.separator}classes" to="" />
								</pathconvert>
								<makeurl property="urls" separator=" ">
									<path path="${plugins.jars}" />
									<path location="${project.build.directory}/${project.build.finalName}.jar" />
								</makeurl>
								<propertyfile file="${project.build.directory}/run.properties">
									<entry key="felix.auto.start" value="${urls}" />
									<entry key="felix.auto.deploy.action" value="uninstall,install,update,start" />
									<entry key="org.osgi.framework.storage" value="${project.build.directory}${file.separator}felix-cache" />
									<entry key="org.osgi.framework.bootdelegation" value="*" />
									<!-- org.w3c.dom.* are missing from default.properties in felix 4.2.1, they are present in 3.0.7 -->
									<entry key="org.osgi.framework.system.packages.extra" value="org.w3c.dom.css, org.w3c.dom.html, org.w3c.dom.stylesheets, org.w3c.dom.traversal, org.w3c.dom.ranges, org.w3c.dom.views, org.w3c.dom.xpath" />
								</propertyfile>
								<makeurl property="run.properties.url" file="${project.build.directory}/run.properties" />
								<java fork="true" jar="${maven.dependency.org.apache.felix.org.apache.felix.main.jar.path}">
									<sysproperty key="felix.config.properties" value="${run.properties.url}" />
									<jvmarg line="${vm.args}" />
								</java>
							</target>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
<!--
/*
 *  Copyright 2013 by The Appdapter Project (www.appdapter.org).
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
-->
